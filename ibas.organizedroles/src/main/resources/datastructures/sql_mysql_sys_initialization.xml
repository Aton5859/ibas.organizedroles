<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE DataStructureOrchestration>
<ns2:DataStructureOrchestration
    xmlns:ns2="http://colorcoding.org/btulz/transformers">
    <Name>sql_mysql_ibas_initialization</Name>
    <Description>基于MYSQL的结构映射说明</Description>
    <Integrated>true</Integrated>
    <DriverName>com.mysql.jdbc.Driver</DriverName>
    <DbUrl>jdbc:mysql://${DbServer}:${DbPort}/mysql?useUnicode=true&amp;characterEncoding=utf8</DbUrl>
    <DbUser>${DbUser}</DbUser>
    <DbPassword>${DbPassword}</DbPassword>
    <Action Name="create stored procedures ${Company}_SYS_SP_GET_USER_MODULES">
        <Step Name="check stored procedures exists">
            <Script>
                DROP PROCEDURE IF EXISTS `${DbName}`.`${Company}_SYS_SP_GET_USER_MODULES`;
            </Script>
        </Step>
        <Step Name="create stored procedures">
            <Script>
                CREATE PROCEDURE `${DbName}`.`${Company}_SYS_SP_GET_USER_MODULES` (
                    platform nvarchar(36),           /*平台代码*/
                    userCode nvarchar(8)             /*用户编码*/
                )
                BEGIN
                    DECLARE platform2 varchar(36);         /*平台编码*/
                    IF (platform = 'DESKTOP' || platform = 'TABLET') THEN
                        SET platform2 = 'COMBINATION';
                    ELSE
                        SET platform2 = platform;
                    END IF;

                    IF EXISTS (SELECT 0 FROM `${Company}_SYS_USER` WHERE `Code` = userCode AND `Super` = 'Y') THEN
                        /* 超级用户全部权限 */
                        SELECT A.*,'A' AuthValue
                        FROM `${Company}_SYS_MODULE` A
                        WHERE (A.`PlatformId` = platform OR A.`PlatformId` = platform2) AND A.`Activated` = 'Y';
                    ELSE
                        /* 非超级用户，角色权限 */
                        SELECT A.*,C.`AuthValue`
                        FROM `${Company}_SYS_MODULE` A INNER JOIN (
                            SELECT DISTINCT B.`ModuleId`,B.`AuthValue`
                            FROM `${Company}_SYS_PRIVILEGE` B
                            WHERE (B.`PlatformId` = platform OR B.`PlatformId` = platform2) AND B.`Activated` = 'Y' AND B.`AuthValue` &lt;&gt; 'N' AND B.`RoleCode` IN (
                                SELECT B.`Role`
                                FROM `${Company}_SYS_ORGSTRC` A INNER JOIN `${Company}_SYS_ORGROLE` B ON A.`ObjectKey` = B.`ObjectKey`
                                      INNER JOIN `${Company}_SYS_ROLEMEM` C ON B.`ObjectKey` = C.`ObjectKey` AND B.`LineId` = C.`RoleId`
                                WHERE A.`ValidDate` &lt;= GETDATE() AND A.`InvalidDate` &gt;= GETDATE() AND C.`Member` = userCode)
                        ) C ON A.`ModuleId` = C.`ModuleID`
                        WHERE (A.`PlatformId` = platform OR A.`PlatformId` = platform2) AND A.`Activated` = 'Y';
                    END IF;
                END;
            </Script>
        </Step>
    </Action>
    <Action Name="create stored procedures ${Company}_SYS_SP_GET_USER_PRIVILEGES">
        <Step Name="check stored procedures exists">
            <Script>
              DROP PROCEDURE IF EXISTS `${DbName}`.`${Company}_SYS_SP_GET_USER_PRIVILEGES`;
            </Script>
        </Step>
        <Step Name="create stored procedures">
            <Script>
              CREATE PROCEDURE `${DbName}`.`${Company}_SYS_SP_GET_USER_PRIVILEGES` (
                    IN platform nvarchar(36),           /*平台代码*/
                    IN userCode nvarchar(8)             /*用户编码*/
              )
              BEGIN
                DECLARE platform2 varchar(36);         /*平台编码*/
                IF (platform = 'DESKTOP' || platform = 'TABLET') THEN
                    SET platform2 = 'COMBINATION';
                ELSE
                    SET platform2 = platform;
                END IF;

                IF EXISTS (SELECT 0 FROM `${Company}_SYS_USER` WHERE `Code` = userCode AND `Super` = 'Y') THEN
                    /*超级用户全部权限*/
                    SELECT 'M' `Source`, `ModuleId` `Target`, `AuthValue` `Value`
                    FROM `${Company}_SYS_PRIVILEGE`
                    LIMIT 0,0;
                ELSE
                    /*非超级用户，角色权限*/
                    /*业务对象的权限设置*/
                    SELECT 'B' `Source`, `BOCode` `Target`, `Self` `Value`
                    FROM `${Company}_SYS_OWNERSHIP`
                    WHERE `UserCode` = userCode AND `Activated` = 'Y'
                    UNION ALL
                    SELECT `Source`, `Target`, `Value`
                    FROM (
                        /*模块的权限设置*/
                        SELECT 'M' `Source`, `ModuleId` `Target`, `AuthValue` `Value`, `RoleCode`
                        FROM `${Company}_SYS_PRIVILEGE`
                        WHERE (`PlatformId` = platform OR `PlatformId` = platform2) AND `Activated` = 'Y' AND IFNULL(`Target`,'') = ''
                        UNION ALL
                        /*应用的权限设置*/
                        SELECT 'A' `Source`, `Target` `Target`, `AuthValue` `Value`, `RoleCode`
                        FROM `${Company}_SYS_PRIVILEGE`
                        WHERE (`PlatformId` = platform OR `PlatformId` = platform2) AND `Activated` = 'Y' AND IFNULL(`Target`,'') &lt;&gt; ''
                    ) T0
                    WHERE T0.`RoleCode` IN (
                        SELECT T1.`Role`
                        FROM `${Company}_SYS_ORGSTRC` T0 INNER JOIN `${Company}_SYS_ORGROLE` T1 ON T0.`ObjectKey` = T1.`ObjectKey`
                                INNER JOIN `${Company}_SYS_ROLEMEM` T2 ON T1.`ObjectKey` = T2.`ObjectKey` AND T1.`LineId` = T2.`RoleId`
                        WHERE T0.`ValidDate` &lt;= GETDATE() AND T0.`InvalidDate` &gt;= GETDATE() AND T2.`Member` = userCode
                    );
                END IF;
              END;
            </Script>
        </Step>
    </Action>
</ns2:DataStructureOrchestration>